rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUserAuthenticated(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create, update: if isUserAuthenticated(userId);
      allow delete: if false;
    }

    match /matches/{matchId} {
      function isMatchParticipant() {
        return isAuthenticated() && 
               request.auth.uid in resource.data.users;
      }

      allow read: if isMatchParticipant();
      
      allow create: if isAuthenticated() && 
                   request.auth.uid in request.resource.data.users;
      
      allow update: if isMatchParticipant() && 
                   request.resource.data.users == resource.data.users;
      
      allow delete: if false;
    }

    match /messages/{messageId} {
      function isMessageParticipant() {
        return isAuthenticated() && 
               request.auth.uid in resource.data.users;
      }

      allow read: if isMessageParticipant();
      allow create: if isAuthenticated() && 
                   request.auth.uid in request.resource.data.users;
      allow update, delete: if false;
    }
  }
} 